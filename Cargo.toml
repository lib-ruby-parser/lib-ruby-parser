[package]
authors = ["Ilya Bylich <ibylich@gmail.com>"]
description = "Ruby parser"
edition = "2018"
include = ["codegen/**/*.rs", "src/**/*.rs", "build.rs", "Cargo.toml", "README.md"]
license = "MIT"
name = "lib-ruby-parser"
repository = "https://github.com/lib-ruby-parser/lib-ruby-parser"
version = "3.0.9"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[features]
default = []

# Uses external structures
compile-with-external-structures = []

# Link with C library that provides external structures (used only for internal testing)
link-with-external-c-structures = []

# Link with CXX library that provides external structures (used only for internal testing)
link-with-external-cpp-structures = []

# Codegen parser.y
codegen-y = ["rust-bison-skeleton"]

# Codegen Rust files
codegen-rust = ["lib-ruby-parser-nodes"]

# Codegen C files (used for internal testing)
codegen-c = ["lib-ruby-parser-nodes", "lib-ruby-parser-bindings"]

# Codegen CXX files (used for internal testing)
codegen-cpp = ["lib-ruby-parser-nodes", "lib-ruby-parser-bindings"]

# Enables optional dependencies to run examples
run-examples = ["clap", "glob", "jemallocator", "pprof"]

# Enables debug output in all structs
debug-all = ["debug-buffer", "debug-lexer", "debug-parser"]

# Enables debug output from the `Buffer`
debug-buffer = []

# Enables debug output from the `Lexer`
debug-lexer = []

# Enables debug output from the `Parser`
debug-parser = []

[dependencies]
onig = {version = "6", optional = true}

# Dependencies of examples
clap = {version = "3.0.0-beta.2", optional = true}
glob = {version = "0.3.0", optional = true}
jemallocator = {version = "0.3.2", optional = true}
pprof = {version = "0.5.0", features = ["flamegraph"], optional = true}

[build-dependencies]
lib-ruby-parser-bindings = {version = "0.11.0", optional = true}
lib-ruby-parser-nodes = {version = "0.35.0", optional = true}
rust-bison-skeleton = {version = "0.34.0", optional = true}

[profile.dev]
debug-assertions = false

[profile.release]
lto = true

[profile.test]
debug-assertions = true
